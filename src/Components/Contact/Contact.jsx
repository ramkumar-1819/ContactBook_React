import React, {useEffect} from 'react';
import './Contact.css'
import img from '../contact-book-2415199-2031455.png';
import {useSelector,useDispatch} from 'react-redux';
import CreateContact from '../CreateContact/CreateContact'; //This Component is used to createContacts
import Search from '../SearchBar/Search';                   //This Component is used to Search a Contacts from the list
import Display from '../DisplayContact/Display';            //This Component is used to display the datas that we fetched from the API based on the id
import {fetchUserContact} from '../Actions';                //This Action usually fetch data from the API based on the id
import {CancelFilter} from '../CancelFilter';               //This function remove sorting and deSelecting checkboxes
import power from './IEC5009_Standby_Symbol-fs8.png';
import {Link} from 'react-router-dom';

export default function Contact(){
    const dispatch=useDispatch()
    //getItems usually has id of the user generated by the API
    const getItems=useSelector(state=>state.userdata);       
  
    useEffect(()=>{
        if(getItems!==""){
            sessionStorage.setItem("id",getItems.datas)      //Storing the id in sessionStorage and using this id only we are showing the datas
        }
        dispatch(fetchUserContact())                         //This action fetch datas on the API based on the id we stored in the sessionStorage
    },[])

    const creatingContact=()=>{                              //This function used to create a contact
        //Making All the Values of as Empty Initially
        document.getElementById("name").value="";
        document.getElementById("phone").value="";
        document.getElementById("email").value="";
        dispatch(fetchUserContact())                         //If the sort is applied then we need to remove it once we create a contact.
        CancelFilter()                                       //Removing Sort,Deselecting Checkboxes
        document.getElementById("searchedValue").value=""    //Clearing searchBar values
        dispatch({type:"Option",option:""})
        document.getElementsByClassName("bluring")[0].style.display="block"; //Bluring the background 
        document.getElementsByClassName("contact")[0].style.display="flex";  //Displaying the Contact form and using this form we are getting I/P from user
        document.getElementsByClassName("popupSection")[0].style.display="none";
    }
    const logouting=()=>{
        //This Function execute when logout button is clicked
        document.getElementsByClassName("bluring")[0].style.display="block"; //Bluring the background 
        document.getElementsByClassName("shutdown")[0].style.display="flex"; 
    }
    const logoutHandler=()=>{
        document.getElementsByClassName("bluring")[0].style.display="none"; //Bluring the background 
        document.getElementsByClassName("shutdown")[0].style.display="none"; 
    }
    return(
        <div className="contactPage">
            <div className="header">
                 <div className="logos">
                    <img src={img} alt="logo"/>
                    <div>ContactBook</div>
                 </div>
                <div className="logout">
                    <button type="button" onClick={creatingContact}>Create Contact</button>
                    <img src={power} alt="powerimg" onClick={logouting}/>
                </div>
            </div>
            <Search/>
            <CreateContact/>
            <Display/>
            <div className="bluring"></div>
            <div className="shutdown">
                <h3>Are you want to logout ?</h3>
                <div className="yes_no">
                    <div><Link to="/signin"><button onClick={logoutHandler}>Yes</button></Link></div>
                    <button onClick={logoutHandler}>No</button>
                </div>
            </div>
        </div>
    )
}